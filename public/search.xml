<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/24/hello-world/"/>
      <url>/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cloudflare创建个人导航网站</title>
      <link href="/19/cloudflare%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%AF%BC%E8%88%AA%E7%BD%91%E7%AB%99/"/>
      <url>/19/cloudflare%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%AF%BC%E8%88%AA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<blockquote><p>CF-Worker-Dir是一款适用于Cloudflare Worker平台上的云函数程序，可以使用它在一分钟内搭建属于自己的导航页面。CF-Worker-Dir提供丰富的自定义配置，同时它还可以预留了接口帮助你售出自己域名。<br>接下来，我们会用cloudflare worker来<strong>免费</strong>创建这个小玩意。</p></blockquote><span id="more"></span><h1 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h1><p>在 Cloudflare Worker 管理页面创建一个新的 Worker 。<br>在Worker编辑页面左边粘贴<strong>以下</strong>的代码。<br>根据自身需要修改 config 的配置内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> *  自定义网站配置 </span><br><span class="line"> */</span><br><span class="line">const config = &#123;</span><br><span class="line">  title: &quot;自定义导航&quot;,                 //write your website title</span><br><span class="line">  subtitle: &quot;Cloudflare Workers Dir&quot;, //write your website subtitle</span><br><span class="line">  logo_icon: &quot;sitemap&quot;,               //select your logo by semantic-ui icon (you can get more msg in:https://semantic-ui.com/elements/icon.html)</span><br><span class="line">  hitokoto: true,                     //use hitokoto or not</span><br><span class="line">  search:true,                        //enable search function</span><br><span class="line">  search_engine:[                     //choose search engine which you use</span><br><span class="line">    &#123;</span><br><span class="line">      name:&quot;百 度&quot;,</span><br><span class="line">      template:&quot;https://www.baidu.com/s?wd=$s&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name:&quot;谷 歌&quot;,</span><br><span class="line">      template:&quot;https://www.google.com/search?q=$s&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name:&quot;必 应&quot;,</span><br><span class="line">      template:&quot;https://www.bing.com/search?q=$s&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name:&quot;搜 狗&quot;,</span><br><span class="line">      template:&quot;https://www.sogou.com/web?query=$s&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  selling_ads: true,                  //Selling your domain or not.(turning on may be helpful for selling this domain by showing some ads.)</span><br><span class="line">  sell_info:&#123;</span><br><span class="line">    domain:&quot;example.com&quot;,</span><br><span class="line">    price:500,                        //domain price</span><br><span class="line">    mon_unit:&quot;yen sign&quot;,              //monetary unit </span><br><span class="line">    contact:[                         //how to contact you</span><br><span class="line">      &#123;</span><br><span class="line">        type:&quot;envelope&quot;,               //contact type (&quot;weixin&quot;,&quot;qq&quot;,&quot;telegram plane&quot;,&quot;envelope&quot; or &quot;phone&quot;)</span><br><span class="line">        content:&quot;info@example.com&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]                        </span><br><span class="line">  &#125;,</span><br><span class="line">  lists: [                            //Url list</span><br><span class="line">    &#123;</span><br><span class="line">      name:&quot;技术&quot;,</span><br><span class="line">      icon:&quot;code&quot;,</span><br><span class="line">      list:[</span><br><span class="line">        &#123;</span><br><span class="line">          url:&quot;https://oschina.net/&quot;,</span><br><span class="line">          name:&quot;开源中国&quot;,</span><br><span class="line">          desc:&quot;程序员集散地&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:&quot;https://v2ex.com&quot;,</span><br><span class="line">          name:&quot;V2EX&quot;,</span><br><span class="line">          desc:&quot;程序员集散地&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:&quot;https://csdn.net/&quot;,</span><br><span class="line">          name:&quot;CSDN技术社区&quot;,</span><br><span class="line">          desc:&quot;程序员集散地&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:&quot;https://github.com/&quot;,</span><br><span class="line">          name:&quot;Github&quot;,</span><br><span class="line">          desc:&quot;程序员集散地&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name:&quot;学习&quot;,</span><br><span class="line">      icon:&quot;graduation cap&quot;,</span><br><span class="line">      list:[</span><br><span class="line">        &#123;</span><br><span class="line">          url:&quot;https://w3school.com.cn/&quot;,</span><br><span class="line">          name:&quot;W3school在线教程&quot;,</span><br><span class="line">          desc:&quot;程序员集散地&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:&quot;https://runoob.com/&quot;,</span><br><span class="line">          name:&quot;菜鸟教程&quot;,</span><br><span class="line">          desc:&quot;程序员集散地&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:&quot;https://segmentfault.com/&quot;,</span><br><span class="line">          name:&quot;思否社区&quot;,</span><br><span class="line">          desc:&quot;程序员集散地&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:&quot;https://jianshu.com/&quot;,</span><br><span class="line">          name:&quot;简书&quot;,</span><br><span class="line">          desc:&quot;程序员集散地&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">const el = (tag, attrs, content) =&gt; `&lt;$&#123;tag&#125; $&#123;attrs.join(&quot; &quot;)&#125;&gt;$&#123;content&#125;&lt;/$&#123;tag&#125;&gt;`;</span><br><span class="line"></span><br><span class="line">async function handleRequest(request) &#123;</span><br><span class="line">  const init = &#123;</span><br><span class="line">    headers: &#123;</span><br><span class="line">      &#x27;content-type&#x27;: &#x27;text/html;charset=UTF-8&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">  return new Response(renderHTML(renderIndex(),config.selling_ads? renderSeller() :null), init);</span><br><span class="line">&#125;</span><br><span class="line">addEventListener(&#x27;fetch&#x27;, event =&gt; &#123;</span><br><span class="line">  return event.respondWith(handleRequest(event.request))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">/*通过分析链接 实时获取favicon</span><br><span class="line">* @url 需要分析的Url地址</span><br><span class="line">*/</span><br><span class="line">function getFavicon(url)&#123;</span><br><span class="line">  if(url.match(/https&#123;0,1&#125;:\/\//))&#123;</span><br><span class="line">    //return &quot;https://ui-avatars.com/api/?bold=true&amp;size=36&amp;background=0D8ABC&amp;color=fff&amp;rounded=true&amp;name=&quot; + url.split(&#x27;//&#x27;)[1];</span><br><span class="line">    return &quot;https://www.google.cn/s2/favicons?sz=64&amp;domain_url=&quot; + url;</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">    //return &quot;https://ui-avatars.com/api/?bold=true&amp;size=36&amp;background=0D8ABC&amp;color=fff&amp;rounded=true&amp;name=&quot; + url;</span><br><span class="line">    return &quot;https://www.google.cn/s2/favicons?sz=64&amp;domain_url=http://&quot; + url;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/** Render Functions</span><br><span class="line"> *  渲染模块函数</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">function renderIndex()&#123;</span><br><span class="line">  const footer = el(&#x27;footer&#x27;,[],el(&#x27;div&#x27;,[&#x27;class=&quot;footer&quot;&#x27;],&#x27;Powered by&#x27; + el(&#x27;a&#x27;,[&#x27;class=&quot;ui label&quot;&#x27;,&#x27;href=&quot;https://github.com/sleepwood/cf-worker-dir&quot;&#x27;,&#x27;target=&quot;_blank&quot;&#x27;],el(&#x27;i&#x27;,[&#x27;class=&quot;github icon&quot;&#x27;],&quot;&quot;) + &#x27;Cf-Worker-Dir&#x27;) + &#x27; &amp;copy; Base on &#x27; + el(&#x27;a&#x27;,[&#x27;class=&quot;ui label&quot;&#x27;],el(&#x27;i&#x27;,[&#x27;class=&quot;balance scale icon&quot;&#x27;],&quot;&quot;) + &#x27;MIT License&#x27;)));</span><br><span class="line">  return renderHeader() + renderMain() + footer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function renderHeader()&#123;</span><br><span class="line">  const item = (template,name) =&gt; el(&#x27;a&#x27;,[&#x27;class=&quot;item&quot;&#x27;,`data-url=&quot;$&#123;template&#125;&quot;`],name);</span><br><span class="line"></span><br><span class="line">  var nav = el(&#x27;div&#x27;,[&#x27;class=&quot;ui large secondary inverted menu&quot;&#x27;],el(&#x27;div&#x27;,[&#x27;class=&quot;item&quot;&#x27;],el(&#x27;p&#x27;,[&#x27;id=&quot;hitokoto&quot;&#x27;],&#x27;条条大路通罗马&#x27;)))</span><br><span class="line">  var title = el(&#x27;h1&#x27;,[&#x27;class=&quot;ui inverted header&quot;&#x27;],el(&#x27;i&#x27;,[`class=&quot;$&#123;config.logo_icon&#125; icon&quot;`],&quot;&quot;) + el(&#x27;div&#x27;,[&#x27;class=&quot;content&quot;&#x27;],config.title + el(&#x27;div&#x27;,[&#x27;class=&quot;sub header&quot;&#x27;],config.subtitle)));</span><br><span class="line">  var menu = el(&#x27;div&#x27;,[&#x27;id=&quot;sengine&quot;&#x27;,&#x27;class=&quot;ui bottom attached tabular inverted secondary menu&quot;&#x27;],el(&#x27;div&#x27;,[&#x27;class=&quot;header item&quot;&#x27;],&#x27;&amp;nbsp;&#x27;) + config.search_engine.map((link,key) =&gt;&#123;</span><br><span class="line">    if(key == 0)&#123;</span><br><span class="line">      return el(&#x27;a&#x27;,[&#x27;class=&quot;active item&quot;&#x27;,`data-url=&quot;$&#123;link.template&#125;&quot;`],link.name);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      return item(link.template,link.name);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).join(&quot;&quot;))</span><br><span class="line">  var input = el(&#x27;div&#x27;,[&#x27;class=&quot;ui left corner labeled right icon fluid large input&quot;&#x27;],el(&#x27;div&#x27;,[&#x27;class=&quot;ui left corner label&quot;&#x27;],el(&#x27;img&#x27;,[&#x27;id=&quot;search-fav&quot;&#x27;,&#x27;class=&quot;left floated avatar ui image&quot;&#x27;,&#x27;src=&quot;https://www.baidu.com/favicon.ico&quot;&#x27;],&quot;&quot;)) + el(&#x27;input&#x27;,[&#x27;id=&quot;searchinput&quot;&#x27;,&#x27;type=&quot;search&quot;&#x27;,&#x27;placeholder=&quot;搜索你想要知道的……&quot;&#x27;,&#x27;autocomplete=&quot;off&quot;&#x27;],&quot;&quot;) + el(&#x27;i&#x27;,[&#x27;class=&quot;inverted circular search link icon&quot;&#x27;],&quot;&quot;));</span><br><span class="line">  return el(&#x27;header&#x27;,[],el(&#x27;div&#x27;,[&#x27;id=&quot;head&quot;&#x27;,&#x27;class=&quot;ui inverted vertical masthead center aligned segment&quot;&#x27;],(config.hitokoto ? el(&#x27;div&#x27;,[&#x27;id=&quot;nav&quot;&#x27;,&#x27;class=&quot;ui container&quot;&#x27;],nav) : &quot;&quot;) + el(&#x27;div&#x27;,[&#x27;id=&quot;title&quot;&#x27;,&#x27;class=&quot;ui text container&quot;&#x27;],title + (config.search ? input + menu :&quot;&quot;) + `$&#123;config.selling_ads ? &#x27;&lt;div&gt;&lt;a id=&quot;menubtn&quot; class=&quot;red ui icon inverted button&quot;&gt;&lt;i class=&quot;heart icon&quot;&gt;&lt;/i&gt; 喜欢此域名 &lt;/a&gt;&lt;/div&gt;&#x27; : &#x27;&#x27;&#125;`)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function renderMain() &#123;</span><br><span class="line">  var main = config.lists.map((item) =&gt; &#123;</span><br><span class="line">    const card = (url,name,desc)=&gt; el(&#x27;a&#x27;,[&#x27;class=&quot;card&quot;&#x27;,`href=$&#123;url&#125;`,&#x27;target=&quot;_blank&quot;&#x27;],el(&#x27;div&#x27;,[&#x27;class=&quot;content&quot;&#x27;],el(&#x27;img&#x27;,[&#x27;class=&quot;left floated avatar ui image&quot;&#x27;,`src=$&#123;getFavicon(url)&#125;`],&quot;&quot;) + el(&#x27;div&#x27;,[&#x27;class=&quot;header&quot;&#x27;],name) + el(&#x27;div&#x27;,[&#x27;class=&quot;meta&quot;&#x27;],desc)));</span><br><span class="line">    const divider = el(&#x27;h4&#x27;,[&#x27;class=&quot;ui horizontal divider header&quot;&#x27;],el(&#x27;i&#x27;,[`class=&quot;$&#123;item.icon&#125; icon&quot;`],&quot;&quot;)+item.name);</span><br><span class="line"></span><br><span class="line">    var content = el(&#x27;div&#x27;,[&#x27;class=&quot;ui four stackable cards&quot;&#x27;],item.list.map((link) =&gt;&#123;</span><br><span class="line">      return card(link.url,link.name,link.desc);</span><br><span class="line">    &#125;).join(&quot;&quot;));</span><br><span class="line"></span><br><span class="line">    return el(&#x27;div&#x27;,[&#x27;class=&quot;ui basic segment&quot;&#x27;],divider + content);</span><br><span class="line">  &#125;).join(&quot;&quot;);</span><br><span class="line">  </span><br><span class="line">  return el(&#x27;main&#x27;,[],el(&#x27;div&#x27;,[&#x27;class=&quot;ui container&quot;&#x27;],main));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function renderSeller() &#123;</span><br><span class="line">  const item = (type,content) =&gt; el(&#x27;div&#x27;,[&#x27;class=&quot;item&quot;&#x27;],el(&#x27;i&#x27;,[`class=&quot;$&#123;type&#125; icon&quot;`],&quot;&quot;) + el(&#x27;div&#x27;,[&#x27;class=&quot;content&quot;&#x27;],content));</span><br><span class="line">  var title = el(&#x27;h1&#x27;,[&#x27;class=&quot;ui yellow dividing header&quot;&#x27;],el(&#x27;i&#x27;,[&#x27;class=&quot;gem outline icon&quot;&#x27;],&quot;&quot;) + el(&#x27;div&#x27;,[&#x27;class=&quot;content&quot;&#x27;],config.sell_info.domain + &#x27; 正在出售&#x27;));</span><br><span class="line">  var action = el(&#x27;div&#x27;,[&#x27;class=&quot;actions&quot;&#x27;],el(&#x27;div&#x27;,[&#x27;class=&quot;ui basic cancel inverted button&quot;&#x27;],el(&#x27;i&#x27;,[&#x27;class=&quot;reply icon&quot;&#x27;],&quot;&quot;) + &#x27;返回&#x27;));</span><br><span class="line"></span><br><span class="line">  var contact = config.sell_info.contact.map((list) =&gt; &#123;</span><br><span class="line">    return item(list.type,list.content);</span><br><span class="line">  &#125;).join(&quot;&quot;);</span><br><span class="line">  var column = el(&#x27;div&#x27;,[&#x27;class=&quot;column&quot;&#x27;],el(&#x27;h3&#x27;,[&#x27;class=&quot;ui center aligned icon inverted header&quot;&#x27;],el(&#x27;i&#x27;,[&#x27;class=&quot;circular envelope open outline grey inverted icon&quot;&#x27;],&quot;&quot;) + &#x27;联系我&#x27;) + el(&#x27;div&#x27;,[&#x27;class=&quot;ui relaxed celled large list&quot;&#x27;],contact));</span><br><span class="line">  var price = el(&#x27;div&#x27;,[&#x27;class=&quot;column&quot;&#x27;],el(&#x27;div&#x27;,[&#x27;class=&quot;ui large yellow statistic&quot;&#x27;],el(&#x27;div&#x27;,[&#x27;class=&quot;value&quot;&#x27;],el(&#x27;i&#x27;,[`class=&quot;$&#123;config.sell_info.mon_unit&#125; icon&quot;`],&quot;&quot;) + config.sell_info.price)));</span><br><span class="line">  var content = el(&#x27;div&#x27;,[&#x27;class=&quot;content&quot;&#x27;],el(&#x27;div&#x27;,[&#x27;class=&quot;ui basic segment&quot;&#x27;],el(&#x27;div&#x27;,[&#x27;class=&quot;ui two column stackable center aligned grid&quot;&#x27;],el(&#x27;div&#x27;,[&#x27;class=&quot;ui inverted vertical divider&quot;&#x27;],&#x27;感兴趣？&#x27;) + el(&#x27;div&#x27;,[&#x27;class=&quot;middle aligned row&quot;&#x27;],price + column))));</span><br><span class="line"></span><br><span class="line">  return el(&#x27;div&#x27;,[&#x27;id=&quot;seller&quot;&#x27;,&#x27;class=&quot;ui basic modal&quot;&#x27;],title + content + action);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function renderHTML(index,seller) &#123;</span><br><span class="line">  return `&lt;!DOCTYPE html&gt;</span><br><span class="line">  &lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">      &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">      &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">      &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">      &lt;title&gt;$&#123;config.title&#125; - $&#123;config.subtitle&#125;&lt;/title&gt;</span><br><span class="line">      &lt;link href=&quot;https://cdn.jsdelivr.net/npm/semantic-ui-css@2.4.1/semantic.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">      &lt;link href=&quot;https://cdn.jsdelivr.net/gh/sleepwood/cf-worker-dir@0.1.1/style.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/jquery@3.4.1/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/semantic-ui-css@2.4.1/semantic.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    $&#123;index&#125;</span><br><span class="line">    $&#123;config.selling_ads ? seller : &#x27;&#x27;&#125;</span><br><span class="line">    &lt;script src=&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot; defer&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      $(&#x27;#sengine a&#x27;).on(&#x27;click&#x27;, function (e) &#123;</span><br><span class="line">        $(&#x27;#sengine a.active&#x27;).toggleClass(&#x27;active&#x27;);</span><br><span class="line">        $(e.target).toggleClass(&#x27;active&#x27;);</span><br><span class="line">        $(&#x27;#search-fav&#x27;).attr(&#x27;src&#x27;,$(e.target).data(&#x27;url&#x27;).match(`+/https&#123;0,1&#125;:\/\/\S+\//+`)[0] + &#x27;/favicon.ico&#x27;) ;</span><br><span class="line">      &#125;);</span><br><span class="line">      $(&#x27;.search&#x27;).on(&#x27;click&#x27;, function (e) &#123;</span><br><span class="line">          var url = $(&#x27;#sengine a.active&#x27;).data(&#x27;url&#x27;);</span><br><span class="line">          url = url.replace(`+/\$s/+`,$(&#x27;#searchinput&#x27;).val());</span><br><span class="line">          window.open(url);</span><br><span class="line">      &#125;);</span><br><span class="line">      /* 鼠标聚焦时，回车事件 */</span><br><span class="line">      $(&quot;#searchinput&quot;).bind(&quot;keypress&quot;, function()&#123;</span><br><span class="line">          if (event.keyCode == 13)&#123;</span><br><span class="line">          // 触发需要调用的方法</span><br><span class="line">          $(&quot;.search&quot;).click();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      $(&#x27;#menubtn&#x27;).on(&#x27;click&#x27;, function (e) &#123;</span><br><span class="line">          $(&#x27;#seller&#x27;).modal(&#x27;show&#x27;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;`</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>复制进去之后，就可以随意更改list，来达到个人导航站的效果了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cloudflare免费制作镜像站</title>
      <link href="/17/worker%E7%9A%84%E8%BF%90%E7%94%A8/"/>
      <url>/17/worker%E7%9A%84%E8%BF%90%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>我发现了一个超级大宝贝儿————cloudflare<br>它慷慨的为我们提供了许多免费的服务，其中就有制作镜像站这一个。</p><span id="more"></span><p>因为本博客还没上线图片功能，所以…之后会上线的！<br>我们先到cloudflare到官网：<a href="http://www.cloudflare.com注册一个账号./">www.cloudflare.com注册一个账号。</a><br>注册好了在左边栏里选workers，然后在下拉出的选项里选概述<br>选好了吗？好了，我们来创建一个workerworker，我们直接选免费计划…<br>cloudflare worker免费计划有一天十万次请求，这是什么概念？这意味着一般人用绰绰有余，约等于完全免费！<br>然后我们在worker的概述上点击蓝色按钮：快速编辑！然后你会进到一个类似于代码编辑器的地方<br>你将会看到页面被分割成了两半，我们能看到左半部分有代码，不用管它，把代码全部删掉，让左边栏空出来。接下来，我们复制以下的代码到左边栏里。<br>（<em>不会吧不会吧，还有人不知道点击一下代码块，代码块的右上角就会浮现出一个小小的一件复制按钮</em>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line">// 反代目标网站.</span><br><span class="line">const upstream = &#x27;google.com&#x27;</span><br><span class="line"></span><br><span class="line">// 反代目标网站的移动版.</span><br><span class="line">const upstream_mobile = &#x27;google.com&#x27;</span><br><span class="line"></span><br><span class="line">// 访问区域黑名单（按需设置）.</span><br><span class="line">const blocked_region = [&#x27;TK&#x27;]</span><br><span class="line"></span><br><span class="line">// IP地址黑名单（按需设置）.</span><br><span class="line">const blocked_ip_address = [&#x27;0.0.0.0&#x27;, &#x27;127.0.0.1&#x27;]</span><br><span class="line"></span><br><span class="line">// 路径替换.</span><br><span class="line">const replace_dict = &#123;</span><br><span class="line">&#x27;$upstream&#x27;: &#x27;$custom_domain&#x27;,</span><br><span class="line">&#x27;//archiveofourown.org&#x27;: &#x27;&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">addEventListener(&#x27;fetch&#x27;, event =&gt; &#123;</span><br><span class="line">event.respondWith(fetchAndApply(event.request));</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">async function fetchAndApply(request) &#123;</span><br><span class="line"></span><br><span class="line">const region = request.headers.get(&#x27;cf-ipcountry&#x27;).toUpperCase();</span><br><span class="line">const ip_address = request.headers.get(&#x27;cf-connecting-ip&#x27;);</span><br><span class="line">const user_agent = request.headers.get(&#x27;user-agent&#x27;);</span><br><span class="line"></span><br><span class="line">let response = null;</span><br><span class="line">let url = new URL(request.url);</span><br><span class="line">let url_host = url.host;</span><br><span class="line"></span><br><span class="line">if (url.protocol == &#x27;http:&#x27;) &#123;</span><br><span class="line">    url.protocol = &#x27;https:&#x27;</span><br><span class="line">    response = Response.redirect(url.href);</span><br><span class="line">    return response;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (await device_status(user_agent)) &#123;</span><br><span class="line">    var upstream_domain = upstream;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    var upstream_domain = upstream_mobile;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">url.host = upstream_domain;</span><br><span class="line"></span><br><span class="line">if (blocked_region.includes(region)) &#123;</span><br><span class="line">    response = new Response(&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;, &#123;</span><br><span class="line">        status: 403</span><br><span class="line">    &#125;);</span><br><span class="line">&#125; else if(blocked_ip_address.includes(ip_address))&#123;</span><br><span class="line">    response = new Response(&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;, &#123;</span><br><span class="line">        status: 403</span><br><span class="line">    &#125;);</span><br><span class="line">&#125; else&#123;</span><br><span class="line">    let method = request.method;</span><br><span class="line">    let request_headers = request.headers;</span><br><span class="line">    let new_request_headers = new Headers(request_headers);</span><br><span class="line"></span><br><span class="line">    new_request_headers.set(&#x27;Host&#x27;, upstream_domain);</span><br><span class="line">    new_request_headers.set(&#x27;Referer&#x27;, url.href);</span><br><span class="line"></span><br><span class="line">    let original_response = await fetch(url.href, &#123;</span><br><span class="line">        method: method,</span><br><span class="line">        headers: new_request_headers</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    let original_response_clone = original_response.clone();</span><br><span class="line">    let original_text = null;</span><br><span class="line">    let response_headers = original_response.headers;</span><br><span class="line">    let new_response_headers = new Headers(response_headers);</span><br><span class="line">    let status = original_response.status;</span><br><span class="line"></span><br><span class="line">    new_response_headers.set(&#x27;cache-control&#x27; ,&#x27;public, max-age=14400&#x27;)</span><br><span class="line">    new_response_headers.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;);</span><br><span class="line">    new_response_headers.set(&#x27;access-control-allow-credentials&#x27;, true);</span><br><span class="line">    new_response_headers.delete(&#x27;content-security-policy&#x27;);</span><br><span class="line">    new_response_headers.delete(&#x27;content-security-policy-report-only&#x27;);</span><br><span class="line">    new_response_headers.delete(&#x27;clear-site-data&#x27;);</span><br><span class="line"></span><br><span class="line">    const content_type = new_response_headers.get(&#x27;content-type&#x27;);</span><br><span class="line">    if (content_type.includes(&#x27;text/html&#x27;) &amp;&amp; content_type.includes(&#x27;UTF-8&#x27;)) &#123;</span><br><span class="line">        original_text = await replace_response_text(original_response_clone, upstream_domain, url_host);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        original_text = original_response_clone.body</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    response = new Response(original_text, &#123;</span><br><span class="line">        status,</span><br><span class="line">        headers: new_response_headers</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">return response;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function replace_response_text(response, upstream_domain, host_name) &#123;</span><br><span class="line">let text = await response.text()</span><br><span class="line"></span><br><span class="line">var i, j;</span><br><span class="line">for (i in replace_dict) &#123;</span><br><span class="line">    j = replace_dict[i]</span><br><span class="line">    if (i == &#x27;$upstream&#x27;) &#123;</span><br><span class="line">        i = upstream_domain</span><br><span class="line">    &#125; else if (i == &#x27;$custom_domain&#x27;) &#123;</span><br><span class="line">        i = host_name</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (j == &#x27;$upstream&#x27;) &#123;</span><br><span class="line">        j = upstream_domain</span><br><span class="line">    &#125; else if (j == &#x27;$custom_domain&#x27;) &#123;</span><br><span class="line">        j = host_name</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    let re = new RegExp(i, &#x27;g&#x27;)</span><br><span class="line">    text = text.replace(re, j);</span><br><span class="line">&#125;</span><br><span class="line">return text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">async function device_status (user_agent_info) &#123;</span><br><span class="line">var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;];</span><br><span class="line">var flag = true;</span><br><span class="line">for (var v = 0; v &lt; agents.length; v++) &#123;</span><br><span class="line">    if (user_agent_info.indexOf(agents[v]) &gt; 0) &#123;</span><br><span class="line">        flag = false;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">return flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中：<br><code>const upstream</code> = ‘反代目标网站’<br><code>const upstream_mobile</code> = ‘反代目标网站的移动版’<br><code>const blocked_region</code> = 访问区域黑名单（按需设置）<br><code>const blocked_ip_address</code> = [‘IP地址黑名单（按需设置）’, ‘127.0.0.1’]</p>]]></content>
      
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客创建一个星期来加入的有趣功能汇总</title>
      <link href="/14/%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%98%9F%E6%9C%9F%E6%9D%A5%E5%8A%A0%E5%85%A5%E7%9A%84%E6%9C%89%E8%B6%A3%E5%8A%9F%E8%83%BD%E6%B1%87%E6%80%BB/"/>
      <url>/14/%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%98%9F%E6%9C%9F%E6%9D%A5%E5%8A%A0%E5%85%A5%E7%9A%84%E6%9C%89%E8%B6%A3%E5%8A%9F%E8%83%BD%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>我现在的这个博客”十贰的小窝”是2022年4月5日搭建的，到今天4月14日已经一个星期多了，也许没有人会注意这个博客其实在一个星期内发生了翻天覆地的变化，这其中也有许多辛酸的故事😂。<br>接下来，我来大致按照时间线来讲一讲博客的改变，把他们汇总起来几乎可以变成一篇完整的博客美化教程喽🤩</p><span id="more"></span><h1 id="改名"><a href="#改名" class="headerlink" title="改名"></a>改名</h1><p>名字是一个博客的灵魂，并不是说原来的名字不好听，而是我无意中又取了一个我自认为很好听又符合我胃口的名字。<br>在这里我也说一下怎么给博客改名，首先我们找到站点配置文件注意是站点配置文件<strong>不是</strong>主题配置文件，是在你的博客的根目录下的那个_config.yml<br>里面找到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">    title: ？？？</span><br><span class="line">    subtitle: &#x27;&#x27;</span><br><span class="line">    description: &#x27;？？？&#x27;</span><br><span class="line">    keywords: ？？？</span><br><span class="line">    author: ？？？</span><br><span class="line">    language: zh-CN</span><br><span class="line">    timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure><p><strong>注意了啊</strong>这里打？？？的都是视情况而定的，就是说每个人的这部分都不同，你可以自定义。好，我们看一下：<br>title是<strong>站点的名字</strong>，比如说我的博客叫十贰的小窝，那我就填成这样：title: 十贰的小窝<br><em><strong>一定要记得冒号后面加一个空格！！！</strong></em><br>subtitle是<strong>副标题</strong>，据说next主题填这个没什么用，我也没试过其他的主题，大家就试着填吧。<br>description是<strong>描述</strong>比如说我的描述是<code>𝖘𝖊𝖎𝖓 𝖟𝖚𝖒 𝖙𝖔𝖉𝖊</code>（*ps:这是花体字，内容是原版德语的”向死而生”*），那我就把它填到description后面。<br>keywords是<strong>关键词</strong>，他有什么用呢？我也不知道….因为我看不到实际的效果，我猜想应该是用来搭配搜索引擎食用的，但是我的博客还没接到搜索引擎上，所以我看不到实际效果😂。<br>author是<strong>作者</strong>，这个挺好理解的，比如说我是<code>十贰</code>，我就把十贰填到author的后面<br>language建议填zh-CN，会将博客转为中文。<br>最后的timezone我不知道什么意思，跳过了…</p><h1 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h1><p>我已经<a href="https://hehysh.github.io/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF.html">讲过了哦</a></p><h1 id="改字体"><a href="#改字体" class="headerlink" title="改字体"></a>改字体</h1><p><a href="https://hehysh.github.io/%E6%9B%B4%E6%94%B9%E5%8D%9A%E5%AE%A2%E5%AD%97%E4%BD%93.html">也讲过了</a><br>(*这篇文章我只是指出了我在改字体中的一个错误，请到文章中<strong>二次跳转</strong>到另外一个大佬的文章内进行学习)</p><h1 id="搜索栏"><a href="#搜索栏" class="headerlink" title="搜索栏"></a>搜索栏</h1><h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><p>我们首先来安装hexo博客搜索所需要的插件<br>在博客根目录执行命令<br><code>npm install hexo-generator-search --save</code><br>安装好了之后呢，我们就在博客的根目录下添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br></pre></td></tr></table></figure><h2 id="常见错误的解决"><a href="#常见错误的解决" class="headerlink" title="常见错误的解决"></a>常见错误的解决</h2><h3 id="本地搜索功能突然不能用了"><a href="#本地搜索功能突然不能用了" class="headerlink" title="本地搜索功能突然不能用了"></a>本地搜索功能突然不能用了</h3><p>什么叫突然不能用了？就是刚开始搜索功能可以用，到了后来突然抽风用不了了。<br>我们先来看一位老哥的问题描述</p><blockquote><p>通过上面的安装一般是可以实现本地搜索功能的，但是，我的问题出现了，刚刚开始的时候，我是在windows电脑上面配置hexo的博客的，但是，后面我迁移到了mac上，然后本地搜索功能突然就不能用了。</p></blockquote><p>一般本地功能不能使用了，有以下几个原因<br>1.search.xml文件中有不符合规则的字符，导致不能解析。<br>2.search.xml中有错误，导致不能解析。<br>3.search.xml文件中有编码不一致的问题，导致xml解析失败。<br>（ps:<em>以上的search.xml就是我们配置了本地搜索后，自动生成的xml格式的包含站点所有博客的文件，通过这个文件就可以进行本地搜索功能。</em>)<br>解决办法：<br><strong>第一步</strong><br>找到站点配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br></pre></td></tr></table></figure><p>我们将将search.xml改为search.json格式。<br><strong>第二步</strong><br>找到你的博客主题的search.ejs模板文件，修改下面代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">$(function () &#123;</span><br><span class="line">    console.log(&quot;lets go！&quot;);</span><br><span class="line">    console.log(&quot;&lt;%= config.root %&gt;&quot;);</span><br><span class="line">    searchFunc(&quot;&lt;%= config.root %&gt;&quot; + &quot;search.xml&quot;, &#x27;searchInput&#x27;, &#x27;searchResult&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>也是改为json格式的文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">$(function () &#123;</span><br><span class="line">    console.log(&quot;lets go！&quot;);</span><br><span class="line">    console.log(&quot;&lt;%= config.root %&gt;&quot;);</span><br><span class="line">    searchFunc(&quot;&lt;%= config.root %&gt;&quot; + &quot;search.json&quot;, &#x27;searchInput&#x27;, &#x27;searchResult&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>最后一步</strong><br>修改你的search的本地js文件，比如我的matery主题的就是在js文件夹下的search.js文件。<br>对这个文件进行json解析的修改，最终就可以成功解决问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">var searchFunc = function (path, search_id, content_id) &#123;</span><br><span class="line">    console.log(&quot;test&quot;);</span><br><span class="line">    // &#x27;use strict&#x27;;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: path,</span><br><span class="line">        dataType: &quot;json&quot;,</span><br><span class="line">        success: function (datas) &#123;</span><br><span class="line">            // get the contents from search data</span><br><span class="line">            // var datas = $(&quot;entry&quot;, xmlResponse).map(function () &#123;</span><br><span class="line">            //     return &#123;</span><br><span class="line">            //         title: $(&quot;title&quot;, this).text(),</span><br><span class="line">            //         content: $(&quot;content&quot;, this).text(),</span><br><span class="line">            //         url: $(&quot;url&quot;, this).text()</span><br><span class="line">            //     &#125;;</span><br><span class="line">            // &#125;).get();</span><br><span class="line">            // console.log(xmlResponse);</span><br><span class="line">            console.log(&quot;test!&quot;);</span><br><span class="line">            </span><br><span class="line">            console.log(datas);</span><br><span class="line">            var $input = document.getElementById(search_id);</span><br><span class="line">            var $resultContent = document.getElementById(content_id);</span><br><span class="line">            $input.addEventListener(&#x27;input&#x27;, function () &#123;</span><br><span class="line">                var str = &#x27;&lt;ul class=\&quot;search-result-list\&quot;&gt;&#x27;;</span><br><span class="line">                var keywords = this.value.trim().toLowerCase().split(/[\s\-]+/);</span><br><span class="line">                $resultContent.innerHTML = &quot;&quot;;</span><br><span class="line">                if (this.value.trim().length &lt;= 0) &#123;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                // perform local searching</span><br><span class="line">                datas.forEach(function (data) &#123;</span><br><span class="line">                    var isMatch = true;</span><br><span class="line">                    var content_index = [];</span><br><span class="line">                    var data_title = data.title.trim().toLowerCase();</span><br><span class="line">                    var data_content = data.content.trim().replace(/&lt;[^&gt;]+&gt;/g, &quot;&quot;).toLowerCase();</span><br><span class="line">                    var data_url = data.url;</span><br><span class="line">                    var index_title = -1;</span><br><span class="line">                    var index_content = -1;</span><br><span class="line">                    var first_occur = -1;</span><br><span class="line">                    // only match artiles with not empty titles and contents</span><br><span class="line">                    if (data_title != &#x27;&#x27; &amp;&amp; data_content != &#x27;&#x27;) &#123;</span><br><span class="line">                        keywords.forEach(function (keyword, i) &#123;</span><br><span class="line">                            index_title = data_title.indexOf(keyword);</span><br><span class="line">                            index_content = data_content.indexOf(keyword);</span><br><span class="line">                            if (index_title &lt; 0 &amp;&amp; index_content &lt; 0) &#123;</span><br><span class="line">                                isMatch = false;</span><br><span class="line">                            &#125; else &#123;</span><br><span class="line">                                if (index_content &lt; 0) &#123;</span><br><span class="line">                                    index_content = 0;</span><br><span class="line">                                &#125;</span><br><span class="line">                                if (i == 0) &#123;</span><br><span class="line">                                    first_occur = index_content;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    // show search results</span><br><span class="line">                    if (isMatch) &#123;</span><br><span class="line">                        str += &quot;&lt;li&gt;&lt;a href=&#x27;&quot; + data_url + &quot;&#x27; class=&#x27;search-result-title&#x27;&gt;&quot; + data_title + &quot;&lt;/a&gt;&quot;;</span><br><span class="line">                        var content = data.content.trim().replace(/&lt;[^&gt;]+&gt;/g, &quot;&quot;);</span><br><span class="line">                        if (first_occur &gt;= 0) &#123;</span><br><span class="line">                            // cut out 100 characters</span><br><span class="line">                            var start = first_occur - 20;</span><br><span class="line">                            var end = first_occur + 80;</span><br><span class="line">                            if (start &lt; 0) &#123;</span><br><span class="line">                                start = 0;</span><br><span class="line">                            &#125;</span><br><span class="line">                            if (start == 0) &#123;</span><br><span class="line">                                end = 100;</span><br><span class="line">                            &#125;</span><br><span class="line">                            if (end &gt; content.length) &#123;</span><br><span class="line">                                end = content.length;</span><br><span class="line">                            &#125;</span><br><span class="line">                            var match_content = content.substr(start, end);</span><br><span class="line">                            // highlight all keywords</span><br><span class="line">                            keywords.forEach(function (keyword) &#123;</span><br><span class="line">                                var regS = new RegExp(keyword, &quot;gi&quot;);</span><br><span class="line">                                match_content = match_content.replace(regS, &quot;&lt;em class=\&quot;search-keyword\&quot;&gt;&quot; + keyword + &quot;&lt;/em&gt;&quot;);</span><br><span class="line">                            &#125;);</span><br><span class="line">                            str += &quot;&lt;p class=\&quot;search-result\&quot;&gt;&quot; + match_content + &quot;...&lt;/p&gt;&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                        str += &quot;&lt;/li&gt;&quot;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                str += &quot;&lt;/ul&gt;&quot;;</span><br><span class="line">                $resultContent.innerHTML = str;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="next主题更新"><a href="#next主题更新" class="headerlink" title="next主题更新"></a>next主题更新</h1><p>因为我当时创建博客时的一个疏忽，所以我不小心git clone了next主题的旧版本，为此，我又重新clone了一个新的，而且发现新的next主题集成了超多，超超超实用的功能，在这里列一下：</p><h2 id="夜晚模式"><a href="#夜晚模式" class="headerlink" title="夜晚模式"></a>夜晚模式</h2><p>夜晚模式！！它支持自动跟随系统，我们只需要在主题配置文件里边搜索<br><code>darkmode</code>然后改成true</p><h2 id="文章进度条"><a href="#文章进度条" class="headerlink" title="文章进度条"></a>文章进度条</h2><p>也是在主题配置文件里边，搜索，然后改成true</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http状态码</title>
      <link href="/07/http%E7%8A%B6%E6%80%81%E7%A0%81/"/>
      <url>/07/http%E7%8A%B6%E6%80%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>http协议里，有<strong>五大类HTTP</strong>状态码</p><span id="more"></span><p>1xx状态码其实是<strong>提示信息</strong>，他表示<strong>目前是协议处理的中转状态，还需要后续的操作</strong><br>2xx状态码是<strong>成功</strong>，表示<strong>报文已收到且被正确处理</strong><br>3xx状态码是<strong>重定向</strong>，表示<strong>资源位置发生变动，需要客户端重新发送请求</strong><br>4xx状态码是<strong>客户端错误</strong>，表示<strong>请求报文有误，服务器无法处理</strong><br>5xx状态码是<strong>服务器错误</strong>，表示<strong>服务器在处理请求的时候内部发生了错误</strong><br>那么我来说说我们最常看到的几种状态码<br><code>400 Bad Request</code>表示<strong>客户端请求的报文有误</strong>，但比较笼统<br><code>404 Not Found</code>表示<strong>请求的资源在服务器上不存在或未找到，所以无法提交给客户端</strong><br><code>503 Service Unavailable</code>表示<strong>服务器当前很忙，暂时无法响应</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> http/https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对于http一些浅薄的认识</title>
      <link href="/07/%E5%AF%B9%E4%BA%8Ehttp%E4%B8%80%E4%BA%9B%E6%B5%85%E8%96%84%E7%9A%84%E8%AE%A4%E8%AF%86/"/>
      <url>/07/%E5%AF%B9%E4%BA%8Ehttp%E4%B8%80%E4%BA%9B%E6%B5%85%E8%96%84%E7%9A%84%E8%AE%A4%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<p>之前刚刚看了一本书，看完之后对于一些以前一知半解的事都了解了一些<br>我们都知道，一般的浏览器里网页前面都会有把小锁，这个小锁是什么玩意？</p><span id="more"></span><p>这就要扯到<code>http与https</code>了，这是什么？好像挺迷惑的，我开始也这么觉得<br>通过查阅资料可以知道<code>http</code>全称是<code>超文本传输协议</code><br>这……这……更深奥了啊？？！<br>没关系，我们来捋一捋，我们把超文本传输协议里面深奥的名词都给他扒出来，把他分成<code>超文本</code>，<code>传输</code>，<code>协议</code>。我们先来看所谓的<code>超文本</code>。<br>文本我们都知道，但是超文本是什么呢？<code>超文本</code>其实包括了图像，视频以及一大堆乱七八糟的东西。换句话说，超文本就是你在网站上看到的所有东西。<br>对于一个服务器来说，无论是文本，还是图像，还是视频，服务器都能用一串文本来解释，我个人对它的理解就是，一张图像，服务器可以用xxx.jpg来解释，最终发给你的浏览器，然后把图像渲染在你的电脑上。<br>OK，接下来就是<code>传输</code>，这里的传输应该很好理解，就比如说a同学给b同学传纸条，这就是一种传输，信息的传递。当然，在http中，传输是允许有人接力的。就比如说a同学给b同学传纸条，结果他们中间隔着x同学和y同学，于是<code>a-&gt;x-&gt;y-&gt;b</code>其中的<code>-&gt;</code>就是传送的意思。http就规定了计算机与服务器之间的信息传输。<br>最后是<code>协议</code>，我们还是拿a同学传纸条的例子，假设他们为了防止老师抓住他们传纸条，约定了一些协议，比如传纸条要偷偷的等等，这就是一种协议。当然，如果他们找x同学和y同学进行中转，x同学和y同学也要遵从这种协议。<strong>在http中，中转者也需要遵从http协议。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> http/https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更改博客字体</title>
      <link href="/06/%E6%9B%B4%E6%94%B9%E5%8D%9A%E5%AE%A2%E5%AD%97%E4%BD%93/"/>
      <url>/06/%E6%9B%B4%E6%94%B9%E5%8D%9A%E5%AE%A2%E5%AD%97%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<p><br>也许有细心的朋友会发现，我的博客原本是微软雅黑的字体<br><br>但是现在已经变成了思源宋体辣！<br><br>其实改字体的过程有些<strong>一波三折</strong></p><span id="more"></span><p><br>我的过程主要是按照这位大大的过程来的<br><br><a href="http://www.chenlianhan.com/2020/03/20/HEXO-NEXT%E7%95%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/#more">贴链接</a><br><br>但是在按照他的教程进行改字体操作时，发现了一个奇怪的地方<br><br>按照他的办法，要先改站点yml，再改主题yml，然后贴思源宋体的link在一个自建文件里，以达到引用的效果。<br><br>但是我自己试的时候，发现谷歌字体镜像站已经挂了，link也没了。我挂了梯子去<a href="font.google.com">谷歌字体站</a>，但是加载出来一瞬间就跳到了404界面，也许是我的梯子有问题，但是我的目标是得到思源宋体的link链接<br><br>找了很多镜像站，全部都挂了，无奈，换教程，看看有没有绕过link链接的办法。<br><br>就在这时，我找到了一个新教程，这个教程和前面那位大大的基本一样，但是不用贴link链接，也就是说，他的教程只有两步：改站点yml，改主题yml，然后就完事了，根本就没link链接什么事。<br><br>于是，我不管link链接，将信将疑的hexo s -d测试了一下，没想到，字体真的显示出来了，这波我热泪盈眶（划掉）<br><br>就这样，我hexo g -d把博客正式部署上了github，过了两三分钟，我去康了康博客，结果他还是微软雅黑。<br><br>嗯？？！！！<br><br>我看了看localhostt:4000，嗯？！localhost的预览仍然是思源宋体，但是部署到了github上却变成了微软雅黑。<br><br>为了确认是github没更新还是代码出了问题，我微调了网站的一个部分，重新部署，结果，过了几分钟，那个微调生效了，字体却没有生效。<br><br>奇了怪了？？<br><br>我上网查了查，其他人却没有这种问题。<br><br>再来一次！我又重新部署了一遍，然后等了半个小时，再打开网站<br><br>over!成功辣！</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给博客添加动态背景</title>
      <link href="/06/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF/"/>
      <url>/06/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF/</url>
      
        <content type="html"><![CDATA[<p><br>也许next主题的背景是白色的，有点单调<br><br>但next主题也是自带动态背景的<br><br>给博客一加，逼格顿时就<strong>高了许多</strong></p><span id="more"></span><p><br>我们先到theme文件夹，找到next主题，再找到_comfig.yml<br><br>然后我们更改一行canvas_nest，他的值默认为false，但是我们给他改成true<br><br>与此同时，你会发现还有其他的三个为false的选项，他们也是动态背景<br><br>但是我试了一下，另外三个太杂乱，所以我还是选了canvas_nest的动态背景<br><br>但是经过我的多次测试，我发现后方的线条会给一些配置稍弱的设备带来卡顿，我现在正在想办法减少线条</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对于next主题归档错误的解决</title>
      <link href="/05/%E5%AF%B9%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E5%BD%92%E6%A1%A3%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
      <url>/05/%E5%AF%B9%E4%BA%8Enext%E4%B8%BB%E9%A2%98%E5%BD%92%E6%A1%A3%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<p>我们都知道next主题有个东西叫做categories，就是主页上显示的那个「分类」<br>但是在当前版本的next（也许最新的没有），有一个致命的bug，会导致他显示错误<br><strong>同时，这个bug也适用于除了<code>home主页</code>的其他所有在侧边栏显示的页面</strong></p><span id="more"></span><p>首先，当我们的博客还没有categories页面的时候，我们会使用这个命令来创建一个categories页面<br><code>hexo new page &quot;categories&quot;</code><br>接下来，在你的博客的根目录/source 下会出现一个文件夹categories，里面会有一个index.md文件，但是做完了这些还不够，你还需要去主题配置文件<code>你的博客根目录/theme/next/_config.yml</code>里找到一个menu配置，内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  #about: /about/ || user</span><br><span class="line">  #tags: /tags/ || tags</span><br><span class="line">  #categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar </span><br></pre></td></tr></table></figure><p>我们要使一个页面在侧边栏生效，就需要取消掉一个选项前面的<code>#</code>号。<br>比如说我们要改categories项，让他显示在侧边栏，就把它改成这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /|| home</span><br><span class="line">  #about: /about/|| user</span><br><span class="line">  #tags: /tags/|| tags</span><br><span class="line">  categories: /categories/|| th</span><br><span class="line">  archives: /archives/|| archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br></pre></td></tr></table></figure><p>以此类推<br>但问题就出在这里，我们把其中的一个选项放大来看<br><code>categories: /categories/ || th</code><br>我们可以发现在/和||中间还隔着一个空格<br>还记得我们<a href="https://hehysh.github.io/2022/04/05/%E6%B5%8B%E8%AF%95/#more">上次说的</a>吗？<br>在hexo中：冒号后面要加空格，在这里也出现了同样的问题<br>在老版本中，/和||中间隔着一个空格是完全没关系的，但到了新版本，他就会像冒号后面不加空格一样显示错误，虽然规则改了，但文件还没改，这就导致出现了致命的bug<br>具体错误会像这样，当你点击侧边栏界面是，页面会显示<br><code>Cannot GET /%20</code><br>其中%20是空格的意思，这就让我们确认了是空格导致的问题<br>我们把错误的内容改成这样⬇️</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /||home</span><br><span class="line">  about: /about/||user</span><br><span class="line">  tags: /tags/||tags</span><br><span class="line">  categories: /categories/||th</span><br><span class="line">  archives: /archives/||archive</span><br><span class="line">  #schedule: /schedule/||calendar</span><br></pre></td></tr></table></figure><p>然后保存，再重新部署<br>over！搞定辣！</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对于hexo博客的空格之重要性</title>
      <link href="/05/%E6%B5%8B%E8%AF%95/"/>
      <url>/05/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p><br>耗时一天，我十贰终于搭建出了基于hexo的博客<br><br>哈哈哈哈实在是太开心辣哈哈哈哈<br><br>但是部署第一篇正经的文章却出现了一些问题</p><span id="more"></span><p><br>我们都知道在用hexo new生成文章的时候，会生成一个.md文件，里面有以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: ???</span><br><span class="line">tag:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><br>其中date是自动生成的，是你创建文章的时间，而tag是空着的，于是，我就改了一下tag，把他改成了这样子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: ???</span><br><span class="line">tag:hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><br>注意这里的：冒号后面没有空格，直接就跟上了hexo，不谙世事的我就这么hexo g -d把博客部署到了github上<br><br>没想到部署到github时就开始一直报错，一看错误类型：<br><code>err： yamlexception</code><br><br>我也不知道咋回事，上网一搜。原来，在hexo的代码中，冒号后面一定加空格，不然表示不出来<br><br>正确的表述应该是这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: ???</span><br><span class="line">tag: hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><br>通过这个事例，我们可以知道在hexo中冒号后面加空格的必要性<br><br>兄弟们，你门学会了嘛？🤣</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>此博客第一篇文章-纪念</title>
      <link href="/05/test-my-site/"/>
      <url>/05/test-my-site/</url>
      
        <content type="html"><![CDATA[<p>哈哈，其实这篇文章是测试的<br>代码之神保佑-d成功<br>求你了试了一个上午了<br>点开👇看我的<strong>艰辛故事</strong>🤣</p><span id="more"></span><p>对于这个hexo博客的搭建，其实不止是花费了一天<br>起因是什么？我在b站上看到了一个视频：《使用cloudstudio搭建mc服务器》，就是这个视频视频，引导我发现了cloud studio<br>看完视频后，我发现cloudstudio可以直接在云端创建一个虚拟服务器，里面的环境都可以直接搭建，非常友好<br>像我这样的学生党，电脑没有，对于老爹的电脑也碰不了碰不了，更别说在他的电脑上安装node.js或者hexo了<br>我有的，只有一个iPad<br>我用iPad注册了腾讯的cloud studio账号，创建了一个工作空间，然后开始像在自己的电脑上一样操作终端，一点一点的搭建起一个标准的hexo博客<br>其实现在你在百度上搜「cloud studio搭建hexo博客」大部分结果都是「此方法已过期」，究其原因，他们都是基于腾讯的page功能进行静态网页搭建的<br>啊？！难道除了腾讯就没有其他的page功能来承载我们的博客了嘛？？！<br>当然有！！我们最棒的GitHub一直以来都提供稳定的page服务，我敢说大部分人的博客都是部署在这个靠谱的page上的<br>就这样，我的hexo博客，上线了！！</p>]]></content>
      
      
      <categories>
          
          <category> 纪念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
